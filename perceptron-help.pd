#N canvas 381 25 817 843 12;
#X obj 1 27 cnv 3 800 3 empty empty description 12 12 0 14 #7c7c7c #404040 0;
#X obj 1 101 cnv 3 800 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 83 107 cnv 18 3 17 empty empty 0 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj 1 309 cnv 3 800 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 83 325 cnv 18 3 17 empty empty 0 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj 83 355 cnv 18 3 17 empty empty 1 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj 1 397 cnv 3 800 3 empty empty example 8 12 0 13 #dcdcdc #000000 0;
#X obj 1 -1 cnv 3 800 3 empty empty perceptron 14 14 1 22 #7c7c7c #404040 0;
#X text 105 325 list:;
#X text 104 355 list:;
#X text 740 8 v.0.1.0;
#X text 112 147 learning: [float];
#X text 113 203 datasize: [integer];
#X text 112 240 reset: [message];
#X text 113 259 print: [message];
#X text 270 240 reset the network parameters;
#X text 270 147 learning rate between 0 and 1 (default = 0.5);
#X text 612 35 Vinícius César de Oliveira;
#X text 183 436 input data for test;
#X text 664 82 tested on pd-0.54-0;
#X obj 158 720 perceptron;
#X msg 565 476 weights \$1;
#X floatatom 565 453 5 0 0 0 - - - 0;
#X msg 567 716 epochs \$1;
#X floatatom 567 695 5 0 0 0 - - - 0;
#X floatatom 566 503 5 0 0 0 - - - 0;
#X msg 566 525 bias \$1;
#X floatatom 567 550 5 0 0 0 - - - 0;
#X msg 567 572 learning \$1;
#X floatatom 567 650 5 0 0 0 - - - 0;
#X msg 567 672 datasize \$1;
#X floatatom 567 600 5 0 0 0 - - - 0;
#X msg 567 622 threshold \$1;
#X msg 214 517 reset;
#X msg 215 544 zero;
#X msg 215 575 print;
#X obj 225 742 route weights wbias error;
#X floatatom 225 810 5 0 0 1 updated\ weights - - 0;
#X obj 564 405 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X floatatom 282 790 5 0 0 1 updated\ bias\ weight - - 0;
#X floatatom 339 769 5 0 0 1 amount\ of\ error\ per\ epoch - - 0;
#X floatatom 158 744 5 0 0 0 binary\ classification - - 0;
#X obj 159 437 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X text 112 128 weights: [interger];
#X text 271 125 amount of weights (default = 1);
#X text 264 108 training mode - 0 = training mode off \, 1 = training mode on (default = 1), f 74;
#X text 113 166 bias: [float];
#X text 271 166 bias (default = 1), f 19;
#X text 113 184 threshold: [float];
#X text 271 184 step function threshold (default = 0.5);
#X text 270 203 size of the input dataset - "amount of data" (default 20);
#X text 271 221 amount of epochs for the network stops learning (default = 100), f 63;
#X text 113 221 epochs: [integer];
#X text 113 280 zero: [message];
#X text 271 280 sets all weights value to zero;
#X text 272 257 print network info: learning rate \, current epoch \, and current weights, f 70;
#X text 158 325 outputs a binary classification after the training process (0 or 1), f 67;
#X text 159 354 list with all updated parameters for each epoch (weights and amount of error), f 78;
#N canvas 615 49 825 823 dataset 0;
#X obj 407 285 text define \$0-dataset;
#X obj 62 306 text get \$0-dataset;
#X obj 62 180 until;
#X obj 62 218 f;
#X obj 140 234 + 1;
#X obj 153 188 sel 0;
#X obj 62 264 t f b;
#X obj 62 151 t b b;
#X obj 62 129 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 178 217 text size \$0-dataset;
#X obj 62 330 outlet;
#X obj 62 104 inlet;
#X obj 375 112 t b b;
#X obj 142 272 mod, f 5;
#X obj 228 254 s datasize;
#X obj 375 88 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X msg 136 153 0;
#X msg 407 197 read data/iris-training.txt;
#X msg 433 247 read data/iris-test.txt;
#X obj 375 65 loadbang;
#X obj 433 134 r classification;
#X obj 174 248 + 1;
#X text 607 196 iris dataset;
#X connect 1 0 10 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 13 0;
#X connect 5 0 2 1;
#X connect 6 0 1 0;
#X connect 7 0 2 0;
#X connect 8 0 7 0;
#X connect 9 0 14 0;
#X connect 9 0 21 0;
#X connect 11 0 8 0;
#X connect 12 0 9 0;
#X connect 12 1 17 0;
#X connect 13 0 3 1;
#X connect 13 0 5 0;
#X connect 15 0 12 0;
#X connect 16 0 3 1;
#X connect 17 0 0 0;
#X connect 18 0 0 0;
#X connect 19 0 15 0;
#X connect 20 0 18 0;
#X connect 21 0 13 1;
#X restore 159 464 pd dataset;
#X text 111 109 training: [integer];
#X text 33 55 implementation of perceptron algorithm \, a neural network created by Frank Rosenblatt;
#X msg 564 428 training \$1;
#X connect 20 0 41 0;
#X connect 20 1 36 0;
#X connect 21 0 20 0;
#X connect 22 0 21 0;
#X connect 23 0 20 0;
#X connect 24 0 23 0;
#X connect 25 0 26 0;
#X connect 26 0 20 0;
#X connect 27 0 28 0;
#X connect 28 0 20 0;
#X connect 29 0 30 0;
#X connect 30 0 20 0;
#X connect 31 0 32 0;
#X connect 32 0 20 0;
#X connect 33 0 20 0;
#X connect 34 0 20 0;
#X connect 35 0 20 0;
#X connect 36 0 37 0;
#X connect 36 1 39 0;
#X connect 36 2 40 0;
#X connect 38 0 61 0;
#X connect 42 0 58 0;
#X connect 58 0 20 0;
#X connect 61 0 20 0;
